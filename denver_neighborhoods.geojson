<!DOCTYPE html>
<html>
<head>
  <title>Denver Coffee Shop Rankings</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    #map { height: 100vh; }
    .legend {
      background: white;
      padding: 10px;
      line-height: 1.5;
      font-size: 12px;
    }
    .legend i {
      width: 12px;
      height: 12px;
      float: left;
      margin-right: 5px;
      opacity: 0.7;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    const map = L.map('map').setView([39.7392, -104.9903], 12);

    const baseMaps = {
      "CartoDB Positron": L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://carto.com/">CARTO</a> contributors',
        subdomains: 'abcd',
        maxZoom: 19
      }),
      "CartoDB Dark Matter": L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://carto.com/">CARTO</a> contributors',
        subdomains: 'abcd',
        maxZoom: 19
      }),
      "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
      })
    };

    baseMaps["OpenStreetMap"].addTo(map);
    L.control.layers(baseMaps).addTo(map);

    const neighborhoodColors = {
      "Lakewood": "#1f77b4",
      "RiNo": "#ff7f0e",
      "Downtown": "#2ca02c",
      "Capitol Hill": "#d62728",
      "Uptown": "#9467bd",
      "LoDo": "#8c564b",
      "Highlands": "#e377c2",
      "Cheesman Park": "#7f7f7f",
      "Cherry Creek": "#bcbd22",
      "Alamo Placita": "#17becf"
    };

    const shops = [
      { rank: 1, name: "Sweet Bloom", coords: [39.7438, -105.0906], score: 4.62, neighborhood: "Lakewood" },
      { rank: 2, name: "Crema Coffee House", coords: [39.7587, -104.9847], score: 4.61, neighborhood: "RiNo" },
      { rank: 3, name: "Huckleberry Roasters", coords: [39.7493, -104.9955], score: 4.58, neighborhood: "Downtown" },
      { rank: 4, name: "Corvus Coffee", coords: [39.7404, -104.9816], score: 4.55, neighborhood: "Capitol Hill" },
      { rank: 5, name: "Weathervane Cafe", coords: [39.7418, -104.9663], score: 4.54, neighborhood: "Uptown" },
      { rank: 6, name: "Little Owl Coffee", coords: [39.7496, -104.9989], score: 4.52, neighborhood: "LoDo" },
      { rank: 7, name: "Steam Espresso Bar", coords: [39.7678, -105.0163], score: 4.49, neighborhood: "Highlands" },
      { rank: 8, name: "Thump Coffee", coords: [39.7374, -104.9734], score: 4.48, neighborhood: "Cheesman Park" },
      { rank: 9, name: "Aviano Coffee", coords: [39.7194, -104.9557], score: 4.39, neighborhood: "Cherry Creek" },
      { rank: 10, name: "Pablos Coffee", coords: [39.7253, -104.9796], score: 4.34, neighborhood: "Alamo Placita" }
    ];

    shops.forEach(shop => {
      const marker = L.marker(shop.coords).addTo(map);
      marker.bindPopup(`<b>${shop.name}</b><br>Rank: ${shop.rank}<br>Score: ${shop.score}<br>Neighborhood: ${shop.neighborhood}`);
    });

    const legend = L.control({position: 'bottomright'});
    legend.onAdd = function(map) {
      const div = L.DomUtil.create('div', 'legend');
      div.innerHTML += '<strong>Neighborhoods</strong><br>';
      for (const neighborhood in neighborhoodColors) {
        div.innerHTML += `<i style="background:${neighborhoodColors[neighborhood]}"></i>${neighborhood}<br>`;
      }
      return div;
    };
    legend.addTo(map);

    // Inline transparent neighborhood polygons
    const inlineGeoJson = {
      "type": "FeatureCollection",
      "features": [
        {
          "type": "Feature",
          "properties": { "name": "LoDo" },
          "geometry": {
            "type": "Polygon",
            "coordinates": [[
              [-105.0031, 39.7528],
              [-105.0000, 39.7528],
              [-105.0000, 39.7500],
              [-105.0031, 39.7500],
              [-105.0031, 39.7528]
            ]]
          }
        },
        {
          "type": "Feature",
          "properties": { "name": "RiNo" },
          "geometry": {
            "type": "Polygon",
            "coordinates": [[
              [-104.9850, 39.7640],
              [-104.9800, 39.7640],
              [-104.9800, 39.7600],
              [-104.9850, 39.7600],
              [-104.9850, 39.7640]
            ]]
          }
        },
        {
          "type": "Feature",
          "properties": { "name": "Capitol Hill" },
          "geometry": {
            "type": "Polygon",
            "coordinates": [[
              [-104.9850, 39.7400],
              [-104.9800, 39.7400],
              [-104.9800, 39.7350],
              [-104.9850, 39.7350],
              [-104.9850, 39.7400]
            ]]
          }
        }
      ]
    };

    const neighborhoodLayer = L.geoJSON(inlineGeoJson, {
      style: feature => ({
        color: "#333",
        weight: 1.5,
        fillColor: "#999",
        fillOpacity: 0.15
      }),
      onEachFeature: (feature, layer) => {
        if (feature.properties && feature.properties.name) {
          layer.bindPopup(`<b>${feature.properties.name}</b>`);
        }
      }
    }).addTo(map);
  </script>
</body>
</html>
